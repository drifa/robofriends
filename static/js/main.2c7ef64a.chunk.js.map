{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","cardsArray","map","user","i","components_Card","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","_this","Object","classCallCheck","this","_super","call","state","hasError","error","info","setState","Component","App","_Component","inherits","createSuper","onSearchChange","event","searchfield","target","value","createClass","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.2c7ef64a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div> \n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    const cardsArray = robots.map((user, i) => {\n        return (\n            <Card \n                key={i}\n                id={robots[i].id}\n                name={robots[i].name}\n                email={robots[i].email} />\n        )\n    })\n    return (\n        <div>\n           {cardsArray} \n        </div>\n    );\n}\n\nexport default CardList;","import React from \"react\";\n\nconst SearchBox = ({ searchChange }) => {\n    return (\n        <div>\n            <input \n                className='pa3 ba b--green bg-lightest-blue'\n                type='search' \n                placeholder='search robots'\n                onChange={searchChange} \n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false,\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true});\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Oooops. That is not good</h1>\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundry;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\nexport class App extends Component {\n    constructor() {\n        // super() calls the constructor of the component\n        super()\n        // state usually lives in the parent component \n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => {\n                return response.json();\n            }).then(users => {\n                this.setState({ robots : users });\n            });\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value });\n    }\n\n    render() {\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        });\n        if (!robots.length) {\n            return <h1>Loading</h1>\n        } else {\n            return (\n                <div className='tc'>\n                    <h1 className='f1'>RoboFriends</h1>\n                    <SearchBox searchChange={this.onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots={filteredRobots}/>\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n            );\n        }\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}